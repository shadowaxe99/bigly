```yaml
name: CI/CD Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with pylint
      run: |
        pip install pylint
        pylint **/*.py

    - name: Test with pytest
      run: |
        pip install pytest
        pytest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: user/app:latest

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f k8s/
```
This GitHub Actions workflow will automatically lint, test, build, and deploy your application whenever changes are pushed to the main branch or a pull request is opened against it. It assumes that you have a Dockerfile at the root of your repository and a directory named `k8s` containing your Kubernetes configuration files. You will need to replace `user/app` with your DockerHub username and the name of your Docker image, and add your DockerHub username and token as secrets in your GitHub repository.